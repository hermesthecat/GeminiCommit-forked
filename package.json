{
  "name": "geminicommit",
  "displayName": "Gemini Commit",
  "description": "Free AI commit messages using Gemini or custom LLM",
  "version": "1.8.6",
  "publisher": "VizzleTF",
  "repository": {
    "type": "git",
    "url": "https://github.com/VizzleTF/GeminiCommit.git"
  },
  "bugs": {
    "url": "https://github.com/VizzleTF/GeminiCommit/issues"
  },
  "engines": {
    "vscode": "^1.93.0"
  },
  "categories": [
    "Machine Learning",
    "Programming Languages",
    "AI"
  ],
  "tags": [
    "Machine Learning",
    "Programming Languages",
    "AI Assistant",
    "AI",
    "Autocommit",
    "LLM",
    "Git"
  ],
  "activationEvents": [
    "onCommand:geminicommit.generateCommitMessage",
    "onView:geminiCommitView"
  ],
  "icon": "icon.png",
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "geminicommit.generateCommitMessage",
        "title": "GeminiCommit: Generate Message",
        "icon": "$(rocket)"
      },
      {
        "command": "geminicommit.setApiKey",
        "title": "GeminiCommit: Set Gemini API Key"
      },
      {
        "command": "geminicommit.setCustomApiKey",
        "title": "GeminiCommit: Set Custom API Key"
      }
    ],
    "menus": {
      "scm/title": [
        {
          "when": "scmProvider == git",
          "command": "geminicommit.generateCommitMessage",
          "group": "navigation"
        }
      ]
    },
    "views": {
      "scm": [
        {
          "id": "geminiCommitView",
          "name": "GeminiCommit"
        }
      ]
    },
    "configuration": {
      "title": "GeminiCommit",
      "properties": {
        "geminiCommit.commit.promptForRefs": {
          "type": "boolean",
          "default": false,
          "description": "Prompt for entering refs (e.g., issue numbers) when generating commit messages. Note: This may interrupt automatic commit flow if Auto Commit is enabled",
          "order": 1
        },
        "geminiCommit.commit.commitLanguage": {
          "type": "string",
          "enum": [
            "english",
            "russian",
            "turkish"
          ],
          "default": "english",
          "description": "Language for generated commit messages. Some commit formats may have limited support for non-English languages",
          "order": 2
        },
        "geminiCommit.commit.commitFormat": {
          "type": "string",
          "enum": [
            "conventional",
            "angular",
            "karma",
            "semantic",
            "emoji",
            "conventionalEmoji"
          ],
          "enumDescriptions": [
            "type(scope): description\n\nbody\n\nfooter",
            "type(scope): short summary\n\nbody\n\nfooter",
            "type(scope): message",
            "type: message",
            ":emoji: message",
            ":emoji: type(scope): message"
          ],
          "default": "conventional",
          "description": "Format style for commit messages. All formats support English, some may have limited support for other languages",
          "order": 3
        },
        "geminiCommit.commit.useCustomInstructions": {
          "type": "boolean",
          "default": false,
          "description": "Use custom instructions for commit message generation. When enabled, customInstructions must not be empty",
          "order": 4
        },
        "geminiCommit.commit.customInstructions": {
          "type": "string",
          "default": "",
          "description": "Custom instructions for commit message generation. Required when useCustomInstructions is enabled",
          "order": 5
        },
        "geminiCommit.commit.onlyStagedChanges": {
          "type": "boolean",
          "default": false,
          "description": "Generate commit message only for staged changes. When disabled: commits staged changes if present, otherwise commits all tracked changes",
          "order": 6
        },
        "geminiCommit.commit.autoCommit": {
          "type": "boolean",
          "default": false,
          "description": "Automatically commit changes after generating the message. Consider disabling promptForRefs when using this feature",
          "order": 7
        },
        "geminiCommit.commit.autoPush": {
          "type": "boolean",
          "default": false,
          "description": "Automatically push changes after committing. Requires Auto Commit to be enabled. Will be ignored if Auto Commit is disabled",
          "order": 8
        },
        "geminiCommit.gemini.model": {
          "type": "string",
          "enum": [
            "gemini-1.0-pro",
            "gemini-1.5-pro",
            "gemini-1.5-flash",
            "gemini-2.0-flash-exp"
          ],
          "default": "gemini-1.5-flash",
          "description": "Select Gemini model for commit message generation. Only used when custom endpoint is not enabled",
          "order": 9
        },
        "geminiCommit.custom.useCustomEndpoint": {
          "type": "boolean",
          "default": false,
          "description": "Use a custom endpoint for AI-generated commit messages. Requires both endpoint URL and model name to be configured",
          "order": 10
        },
        "geminiCommit.custom.endpoint": {
          "type": "string",
          "default": "",
          "description": "Custom endpoint URL (e.g., 'https://api.openai.com/v1' for OpenAI). Required when useCustomEndpoint is enabled",
          "order": 11
        },
        "geminiCommit.custom.model": {
          "type": "string",
          "default": "",
          "description": "Model name for custom endpoint (e.g., 'gpt-3.5-turbo' for OpenAI). Required when useCustomEndpoint is enabled",
          "order": 12
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src",
    "lint:fix": "eslint src --fix",
    "package": "vsce package"
  },
  "devDependencies": {
    "@types/glob": "^8.1.0",
    "@types/mocha": "^10.0.10",
    "@types/node": "^22.13.1",
    "@types/vscode": "^1.93.0",
    "@typescript-eslint/eslint-plugin": "^8.24.0",
    "@typescript-eslint/parser": "^8.24.0",
    "@vscode/test-electron": "^2.3.9",
    "@vscode/vsce": "^3.2.2",
    "eslint": "^9.21.0",
    "glob": "^11.0.1",
    "mocha": "^11.1.0",
    "typescript": "^5.7.3"
  },
  "dependencies": {
    "axios": "^1.7.9"
  }
}
